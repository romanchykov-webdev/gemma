import { NextResponse } from "next/server";
import { prisma } from "../../../../prisma/prisma-client";

// ‚úÖ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ 1 —á–∞—Å (3600 —Å–µ–∫—É–Ω–¥)
export const revalidate = 3600;

// ‚úÖ In-memory –∫–µ—à –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
let cachedIngredients: any[] | null = null;
let cacheTime = 0;
const CACHE_TTL = 3600 * 1000; // 1 —á–∞—Å –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

export async function GET() {
	const now = Date.now();

	// ‚úÖ –ï—Å–ª–∏ –∫–µ—à —Å–≤–µ–∂–∏–π - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ä–∞–∑—É (—ç–∫–æ–Ω–æ–º–∏—è ~2 —Å–µ–∫—É–Ω–¥—ã)
	if (cachedIngredients && now - cacheTime < CACHE_TTL) {
		console.log("‚úÖ Returning cached ingredients from memory");
		return NextResponse.json(cachedIngredients);
	}

	// ‚úÖ –ò–Ω–∞—á–µ - –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –ë–î
	console.log("üîÑ Fetching ingredients from database...");
	const ingredients = await prisma.ingredient.findMany({
		select: {
			id: true,
			name: true,
			price: true,
			imageUrl: true,
		},
		orderBy: {
			id: "asc",
		},
	});

	// ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–µ—à
	cachedIngredients = ingredients;
	cacheTime = now;

	return NextResponse.json(ingredients);
}
